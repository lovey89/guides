* Insert data from another table with default values

#+BEGIN_SRC sql
INSERT INTO mytable1(col11, col12, col13, col14)
  SELECT col21, col22, 'default_string', 1
  FROM mytable2
  WHERE col23 = 'a_value';
#+END_SRC

* Get constraints from Postgrespl

#+BEGIN_SRC sql
-- Table constraints
SELECT *
FROM information_schema.table_constraints;

-- Foreign key constraints
SELECT *
FROM information_schema.referential_constraints;

-- Check constraints
SELECT *
FROM information_schema.check_constraints;
#+END_SRC

* Find duplicates (multiple columns)

#+BEGIN_SRC sql
SELECT
    name, email, COUNT(*) as ct
FROM
    users
GROUP BY
    name, email
HAVING
    COUNT(*) > 1
ORDER BY ct DESC;
#+END_SRC

* Doing a ~WHERE IN~ on multiple columns in Postgresql

#+BEGIN_SRC sql
SELECT *
FROM tbl
WHERE (col0, col1) IN ((val01, val02), (val11, val12), (val21, val22))
#+END_SRC

* Getting the total number of elements when using pagenation

#+BEGIN_SRC sql
SELECT *, count(*) OVER() AS full_count
FROM tbl
WHERE condition
ORDER BY col1
LIMIT 25
OFFSET 50
#+END_SRC

The ~full_count~ column will now contiain the total number of elements (before
applying ~LIMIT~ and ~OFFSET~). Note that the database will have to find all
values when using this and it may affect performance. Postgrespl's documentation
contains more information about [[https://www.postgresql.org/docs/current/tutorial-window.html][window functions]].

* Interesting links

[[http://rachbelaid.com/postgres-full-text-search-is-good-enough/]]
https://niallburkley.com/blog/index-columns-for-like-in-postgres/
http://www.sql-join.com/sql-join-types/
https://www.sitepoint.com/simply-sql-the-from-clause/
